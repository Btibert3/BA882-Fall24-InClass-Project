---
title: "Crawl Walk Run"
format:
  html:
    embed-resources: true
---

```{python}
#| tags: [parameters]
#| echo: false

year = 2023
```



## Resources:

* Example here: https://posit.co/blog/parameterized-quarto/


## Use variables inline

Thank you for participating in our `{python} year` project!

To see how the templates is used:

```
Thank you for participating in our `{python} year` project!
```



## Rendering the report

We can render reports with parameters like so:

```
quarto render report4.qmd -P year:2025 -P producer_id:BROCK1
```

The `-P` command is how we can pass in the argument values to a report that supports these parameters.  Let's call that `template.qmd`.

:::{.callout-important}
You will need to install papermill with `pip install papermill` for reports with parameters.  Be careful if you are using VS Code, you might need to install this in your base environment, as it appears that Quarto may not always respect the (conda) virutal environment that is activated where the render report was invoked.
:::

## The Report

```{python}
#| echo: false

import pandas as pd
import datetime
import numpy as np

def generate_fake_timeseries(year):
    # Generate a date range for the year
    dates = pd.date_range(start=f'{year}-01-01', end=f'{year}-12-31', freq='D')
    
    # Generate random data
    np.random.seed(42)
    
    sales = np.random.randint(1000, 5000, size=len(dates))  # Random sales between 1000 and 5000
    temperature = np.random.uniform(low=-10, high=35, size=len(dates))  # Random temperature between -10 and 35 degrees
    traffic = np.random.randint(500, 10000, size=len(dates))  # Website traffic between 500 and 10000 visits
    
    # Create the DataFrame
    df = pd.DataFrame({
        'date': dates,
        'sales': sales,
        'temperature': temperature,
        'website_traffic': traffic
    })
    
    return df



df_fake_timeseries = generate_fake_timeseries(year)

```


Here is a fake timeseries dataset for the year `{python} year`.


```{python}
df_fake_timeseries.plot(kind="line", x="date", y="website_traffic")
```

